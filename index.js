// Задание 1
// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.
// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator. Каждый альбом имеет следующую структуру:
// {
// title: "Название альбома",
// artist: "Исполнитель",
// year: "Год выпуска"
// }
// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате: Название альбома - Исполнитель (Год выпуска)


const musicCollection = [
    {
        title: "Bones",
        artist: "Imagine Dragons",
        year: "2023"
    },
    {
        title: "Enemy",
        artist: "Imagine Dragons",
        year: "2022"
    },
    {
        title: "In the Hall of the Mountain King",
        artist: "Edvard Grieg",
        year: "1876"
    },
    {
        title: "Fire",
        artist: "Scooter",
        year: "1997"
    }
];

const mediaPlayer = {
    musicCollection: [...musicCollection],
    [Symbol.iterator]: function () {
        let index = 0;
        return {
            next: () => {
                if (index < this.musicCollection.length) {
                    return {
                        value: this.musicCollection[index++], done: false
                    };
                } else {
                    return {
                        done: true
                    };
                }
            },
        };
    },
};

for (const music of mediaPlayer) {
    console.log(music.title," - ", music.artist, "(", music.year, ")");
}


// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.
// Необходимо создать систему управления этими заказами, которая позволит:
// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.
// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:
// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:
// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:
// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк

let cooks = new Map([
    ["Виктор", "Пицца"],
    ["Ольга", "Суши"],
    ["Дмитрий", "Десерты"]
]);
    

let dishes = new Map([
    ["Пицца 'Маргарита'", "Виктор"],
    ["Пицца 'Пепперони'", "Виктор"],
    ["Суши 'Филадельфия'", "Ольга"],
    ["Суши 'Калифорния'", "Ольга"],
    ["Тирамису", "Дмитрий"],
    ["Чизкейк", "Дмитрий"]
]);
    

let orders = new Map([
    [{name: "Алексей"}, ["Пицца 'Пепперони'", "Тирамису"]],
    [{name: "Мария"}, ["Суши 'Калифорния'", "Пицца 'Маргарита'"]],
    [{name: "Ирина"}, ["Чизкейк"]]
]);
    

console.log("Специализация поваров:");
cooks.forEach((value, key) => {
console.log(key + " - специализация: " + value);
});
    
console.log("\nБлюда и их повара:");
dishes.forEach((value, key) => {
console.log(key + " - повар: " + value);
});
    
console.log("\nЗаказы клиентов:");
orders.forEach((value, key) => {
console.log(key.name + " заказал: " + value);
});